<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB8AAAAbCAYAAACEP1QvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABL1JREFUSEvF1n9MlHUcB/D7p60tW2mpjCRDcJrNGSpCs/xRJvlrDOEsyRQUYRjK
        WujCckWXXpi2JjNRW23UUv5pFmSsIifh3PghKCo/Mo6754A7sBzH/X6e5959vt/nOXiejppk5Xd7Ic9z
        3PN+P5/nuXs0iKKIu0UX/k8Xf69Ev8jKtm6FRndrs5g7CveHhnGqqQLTTVMQY56EONNkVHVWIRgM8tcl
        SUZ8yUOwu+x8W5vFGNgfho1nRZU8gBW1T2JJ7ePc0p/mYOX5+VhTn4R13y/BmkMpiH1nEvKvbETXzS7+
        Hm0WM+5w1viRgw8juWYa5n86AzGl92Nx1SysOJeAtReSkX5xKTY1rsLWy2nIac7Aa9ey0TnYyd+rzWLG
        Hf7oh5Mx44OJgIeKsIspy/SvjKu/N2JhxWPIbEhB9qVU5LdmorBtC/Z05KHjr8IDgQDCwkuSg/A6W+Eb
        ate59XMZppbch0BorDuL9ZGw/LME5LVkYNeVzdjdnou3buxC54Aydm0WExEu4zecMs/A0MCRMX29P55a
        02nzsx7lpx8TTPcipymdn3HR9Ty8+ctOmLp33354bYURnv7df6v3cjbsraOElixEHXoQuZcyUNCWidev
        5aC481WU/FrEtTuUsWuzGIPf70cYW3WnNyJgN47bUMdWDFiMOoM9G+DqOU8zoQ87LW0WExFeX2mEaE3k
        fjg6E3WfxN+RC8fTUffFK2j6dp8umIk888osSJYpCFjuoS8JB0JWE6TePXr2YrgH9sLtMI/wOEpVB8nh
        ET7nEa52/zRdMBMR3vBVHtA9Ff72WYC3Cz57JgKCwtf7Mrx9WxS92WQbfH05tH87PH1MPtlBrxdguH+n
        qpCr/3KtLpiJCL9YuYOHn9kXDY8thULTyHoEbEYEhQ1U5iUVlRE2qagMcVMhn30bvPYckqsQ8mkfHZN9
        IjRZTER4U1URD68umY6gdSUFpiBoW02oubCWiqSqhYgtg15/kQ7ObFSxUpspeDM89izazobo2I6QLOqC
        mYjw5m+K6JpHo7vZDJ/tWQpdRlZAFJ6HSJNggsILCirlt6eq0qjcepJOl8GoK9N4etHtnXnDmULIPVH0
        xOqjgycphMXkGdVShW25Uojw6XCryGr66OkndLY0DnIooAtmIsJbqt+gOzwGHtkK2ZbAKQUSR8oEhGQE
        7U/RPlYqXIZNaBmVeY62WSFGmVDVR/P4sbVZjMHn8yGMrZaze3HucBxudcfSBGYjZHkCYs9ciJa5kHrm
        QbIm0LVmFtA9kUSXgRWiMoJaxvY0oQnZlOkEqJCsPrS0WYzB6/UijK0W+jKoeXsiH33IGstJ3TM50TKL
        wmdTiTkqKsWKCArRuoAshGRbpEyHSvksifw/OWxps5iI8Os/mtBRUwA4y4D+ck52nuDgIM6jXMhxjLZP
        qo5rnERogDgV7TVG9ct1jHCPx4Mwttpq3qcb8yYkYb+ObD9AzKpSOsMDdGZ/ZiLv6XxnjqZw9uijR64m
        i4kIv1r9LmTRBWmwXOPjsTnKRg2egNR/TEFT4Zzl+Lx4Aj8uW9osxuB2uxHGlle0wOtyYNh141/h9SmX
        ky1tFmMYHh5G2H+9tFmMLvz/ZnC5XLg7XPgDyt1zA/qSMPcAAAAASUVORK5CYII=
</value>
  </data>
</root>